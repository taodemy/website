import Head from "next/head";
import EViewPortQuery from "@/constants/viewPortSize";
import useMediaQuery from "@/hooks/useMediaQuery";
import { GetStaticProps, GetStaticPropsResult } from "next";
import Hero, { IHero } from "@/components/general/Hero";
import OurClients, { IOurClients } from "@/components/general/OurClients";
import WhatWeDo, { IWhatWeDo } from "@/components/general/WhatWeDo";
import FeaturedWork, { IImgBox } from "../components/general/FeaturedWork";
import HowWeWork, { IHowWeWork } from "@/components/general/HowWeWork";
import Values, { IValue } from "@/components/general/OurValues";
import Contact, { IContact } from "@/components/general/Contact";
import LatestNews, { ILatestNews } from "@/components/general/LatestNews";

interface Props {
  indexPage: IIndexPage;
  errorMessage?: string;
}

interface IIndexPage {
  hero: IHero;
  ourClients: IOurClients;
  whatWeDo: IWhatWeDo;
  featuredWork: { imgBoxes: IImgBox[] };
  howWeWork: IHowWeWork;
  values: IValue;
  contact: IContact;
  latestNews: ILatestNews[];
}

const { DESKTOP, TABLET, PHONE } = EViewPortQuery;

export /* istanbul ignore next */ async function getStaticProps() {
  try {
    const res = await fetch(`${process.env.WEBSITE_API_URL}/IndexPage`);
    if (res.ok) {
      const data: IIndexPage = await res.json();
      return {
        props: {
          indexPage: data,
        },
      };
    } else {
      throw new Error("Failed to fetch data, please check!");
    }
  } catch (error) {
    return {
      props: {
        indexPage: null,
        errorMessage: "Failed to fetch data, please check!",
      },
    };
  }
}

export default function Home({ indexPage, errorMessage }: Props) {
  const isDesktopSize = useMediaQuery(DESKTOP);
  const isTabletSize = useMediaQuery(TABLET);
  const isPhoneSize = useMediaQuery(PHONE);

  if (!indexPage) {
    return <div>{errorMessage}</div>;
  }

  return (
    <>
      <Head>
        <title>Taodemy Website</title>
        <meta name="description" content="Generated by Taodemy" />
      </Head>
      <main>
        <Hero {...indexPage.hero} isPhoneSize={isPhoneSize} />
        <OurClients iconItems={indexPage.ourClients.iconItems} />
        <WhatWeDo whatWeDoItems={indexPage.whatWeDo.whatWeDoItems} />
        <FeaturedWork
          imgBoxes={indexPage.featuredWork.imgBoxes}
          isDesktopSize={isDesktopSize}
          isTabletSize={isTabletSize}
        />
        <HowWeWork {...indexPage.howWeWork} />
        <Values listItems={indexPage.values.listItems} isPhoneSize={isPhoneSize} />
        <Contact {...indexPage.contact} isPhoneSize={isPhoneSize} />
        <LatestNews latestNews={indexPage.latestNews} isPhoneSize={isPhoneSize} />
      </main>
    </>
  );
}
